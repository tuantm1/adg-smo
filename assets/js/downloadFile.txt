<!DOCTYPE html>
<html>

<head>
<script src="//unpkg.com/angular/angular.js"></script>
    <link rel="stylesheet" href="style.css">
    <script src="script.js"></script>
    </head>

    <body ng-app="app" ng-controller="myVm">
    <h1>Upload and Download File with AngularJS</h1>
<h2>Content-Type: {{files[0].type}}</h2>
<input type="file" select-ng-files ng-model="files">
    <br>
    <code>
    Name: {{files[0].name}}<br>
Size: {{files[0].size}}<br>
Type: {{files[0].type}}<br>
Date: {{files[0].lastModifiedDate}}<br>
</code>
<button ng-click="upload()" ng-disabled="!files">
    Upload
    </button>
    <br>
    <div ng-show="result">{{result}}</div><br>
<h2 ng-show="data">Data from server</h2>
{{data}}<br>

<a download="data_{{files[0].name}}" xd-href="data">
    <button ng-disabled="!data">Download data</button>
</a>

</body>

</html>



angular.module("app",[]);

angular.module("app").controller("myVm", function($scope, $http, $window) {
    var vm = $scope;
    var url = "//httpbin.org/post";
    var config = { headers: {
            "Content-Type": undefined,
        }
    };

    vm.upload = function() {
        $http.post(url, vm.files[0], config).
        then(function(response) {
            vm.result = "SUCCESS";
            vm.data = "data:application/octet-stream;base64,";
            console.log(vm.data);
        }).catch(function(response) {
            vm.result = "ERROR "+response.status;
        });
    };
});

angular.module("app").directive("xdHref", function() {
    return function linkFn (scope, elem, attrs) {
        scope.$watch(attrs.xdHref, function(newVal) {
            newVal && elem.attr("href", newVal);
        });
    };
});

angular.module("app").directive("selectNgFiles", function() {
    return {
        require: "ngModel",
        link: function postLink(scope,elem,attrs,ngModel) {
            elem.on("change", function(e) {
                var files = elem[0].files;
                ngModel.$setViewValue(files);
            });
        }
    };
})